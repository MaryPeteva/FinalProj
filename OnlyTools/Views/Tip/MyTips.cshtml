@model List<TipsAllModel>
@inject IPaginationServices PaginationService
@{
    ViewBag.Title = "My shared tips";
}

<style>
    .card-img-top {
        width: 200px;
        height: auto;
    }
</style>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="text-center row">
    <!-- Dropdown for filtering -->
    <label for="category">Filter by Category:</label>
    <select id="category">
        <option value="">All</option>
        @foreach (var category in ViewBag.Categories)
        {
            <option value="@category.Id" selected="@((ViewData["CategoryId"]?.ToString() == category.Id.ToString()) ? "selected" : null)">@category.Name</option>
        }
    </select>
    @if (!Model.Any())
    {
        <h2>You have not shared any tips yet!</h2>
    }
    else
    {
        @foreach (var tip in Model)
        {
            <div class="card col-4" style="width: 20rem;">
                <div class="card-body">
                    <h5 class="card-title mt-1">@tip.Title</h5>
                    <p class="mb-0"><span class="fw-bold">Author: </span>@tip.Author.UserName</p>
                    <br />
                    <p class="card-text">@GetFirstSentences(tip.Content)</p>
                </div>

                <a asp-controller="Tip" asp-action="Details" asp-route-id="@tip.Id" class="btn btn-warning mb-2 w-100 p-3 fw-bold">Read More</a>
                @if (User.Identity.IsAuthenticated && tip.AuthorId.ToString() == User.FindFirstValue(ClaimTypes.NameIdentifier))
                {
                    <a asp-controller="Tip" asp-action="Edit" asp-route-id="@tip.Id" class="btn btn-warning mb-2 w-100 p-3 fw-bold">Edit</a>
                    <form class="mt-2" asp-controller="Tip" asp-action="Delete" asp-route-id="@tip.Id">
                        <div class="d-grid gap-2">
                            <input type="submit" value="Delete post" class="btn btn-danger mb-2" />
                        </div>
                    </form>
                }
            </div>
        }
    }
    @{
        var paginationModel = PaginationService.CreatePaginationModel(ViewBag.PageIndex, ViewBag.TotalPages, ViewBag.HasPreviousPage, ViewBag.HasNextPage, "All", "Tip", new { });
    }

    @await Html.PartialAsync("_Pagination", (object)paginationModel)
</div>

@section Scripts {
    <script>
        document.getElementById('category').addEventListener('change', function () {
            var categoryId = this.value;
            // Construct the URL with the selected category
            var url = '@Url.Action("MyTips", "Tip")' + '?categoryId=' + categoryId;
            // Navigate to the constructed URL
            window.location.href = url;
        });
    </script>

    <partial name="_ValidationScriptsPartial" />
}

@functions {
    // Helper function to get the first couple of sentences from content
    public string GetFirstSentences(string content)
    {
        if (string.IsNullOrWhiteSpace(content))
        {
            return string.Empty;
        }

        // Split content into sentences
        var sentences = content.Split(new[] { '.', '!', '?' }, StringSplitOptions.RemoveEmptyEntries);

        // Get the first 2 of sentences
        var firstSentences = string.Join(". ", sentences.Take(2));

        return firstSentences;
    }
}
