@model List<ToolModel>
@inject IPaginationService PaginationService
@{
    ViewBag.Title = "What do you need for your next project?";
}

<style>
    .card-img-top {
        width: 200px;
        height: auto;
    }
</style>

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<div class="text-center row">
    @if (!Model.Any())
    {
        <h2>No tools shared yet!</h2>
        <h4>Be the first to share!</h4>
    }
    else
    {
        @foreach (var tool in Model)
        {
            <div class="card col-4" style="width: 20rem;">
                @if (tool.ToolPicture != null)
                {
                    string imageBase64 = Convert.ToBase64String(tool.ToolPicture);
                    string imageSrc = $"data:image/jpeg;base64,{imageBase64}";
                    <img src="@imageSrc" class="card-img-top" alt="Tool Image">
                }
                <div class="card-body">
                    <h5 class="card-title mt-1">@tool.Name</h5>
                    <p class="mb-0"><span class="fw-bold">Name: </span>@tool.Name</p>
                    <p class="mb-0"><span class="fw-bold">Rent price: </span>@tool.RentPrice</p>
                </div>

                <a asp-controller="Tool" asp-action="Details" asp-route-id="@tool.Id" class="btn btn-warning mb-2 w-100 p-3 fw-bold">View Details</a>
            </div>
        }
    }

    @{
        var paginationModel = PaginationService.CreatePaginationModel(ViewBag.PageIndex, ViewBag.TotalPages, ViewBag.HasPreviousPage, ViewBag.HasNextPage, "All", "Tool", new { });
    }

    @await Html.PartialAsync("_Pagination", (object)paginationModel)

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
